-content_for :title do
  = I18n.t('layout.parse')

-content_for :scripts do
  %script{src: "/js/csvExport.min.js"}
  :javascript
    $(function() {
      var ele = $("#bionomia-parse-results");
      $("#csv-export").on("click", function(e) {
        e.preventDefault();
        ele.csvExport({ title: ele.attr("id") + ".csv" });
        return false;
      });
    });

-content_for :jumbotron do
  %div{class:"jumbotron jumbotron-fluid d-flex flex-wrap"}
    %div{class:"mr-auto p-2"}
      %h1{class:"h2"}= I18n.t('layout.parse')

%p
  Paste list of human names (limited to first 1,000 rows) as typically seen in the Darwin Core terms,
  %a{href: "https://dwc.tdwg.org/terms/#dwc:recordedBy"} recordedBy
  or
  %a{href: "https://dwc.tdwg.org/terms/#dwc:identifiedBy"} identifiedBy
  where each line is a new entry. See the
  %a{href:"/developers/code"} Ruby gem
  used for this service and documentation for the
  = succeed "." do
    %a{href:"/developers/parse"} API

%form{action:"/parse", method: :post}
  %div{class: "form-group"}
    %textarea{name: "names", class:"form-control", rows: 5}= params[:names]
  %button{class:"btn btn-success", type:"submit"}= I18n.t('general.submit')

- if !@output.empty?

  - klass = @output.size >= 300 ? "warning" : "success"
  %div{class:"alert alert-#{klass} mt-4"}
    %div{class:"row"}
      %div{class:"col col-12 col-lg-10"}
        Parsed results are limited to the first 1,000 rows.
      %div{class:"col col-12 col-lg-2 text-lg-right pr-3"}
        %a{href:"#", id:"csv-export"}
          %i{class:"fas fa-file-csv h5 text-dark m-0 p-1"}
          CSV

  %div{class:"table-responsive mt-4"}
    %table{class:"table table-hover table-sm border-bottom", id:"bionomia-parse-results"}
      %thead{class:"thead-light"}
        %tr
          %th{scope:"col", class:"border-right"} Original
          - (1..@columns).each do |col|
            %th{scope:"col"} Title
            %th{scope:"col"} Appellation
            %th{scope:"col"} Given
            %th{scope:"col"} Particle
            %th{scope:"col"} Family
            %th{scope:"col", class:"border-right"} Suffix
      %tbody
        - @output.each_with_index do |row, index|
          %tr
            %th{scope:"row", class:"small border-right font-weight-bold"}
              #{row[index][:original]}
            - row[index][:parsed].each do |col|
              %td #{col[:title]}
              %td #{col[:appellation]}
              %td #{col[:given]}
              %td #{col[:particle]}
              %td #{col[:family]}
              %td{class:"border-right"} #{col[:suffix]}
            - (1..@columns - row[index][:parsed].size).each do |col|
              %td
              %td
              %td
              %td
              %td
              %td{class:"border-right"}
