-content_for :title do
  = I18n.t('developer.parse_names')

-content_for :jumbotron do
  %div{class:"jumbotron jumbotron-fluid d-flex flex-wrap"}
    %div{class:"mr-auto p-2"}
      %h1{class:"h2"}= I18n.t('developer.title')

= haml :'partials/developers/tabs', layout:false, locals: { active_tab: locals[:active_tab] }

%h3{class:"mt-4 mb-3"}= I18n.t('developer.parse_names')

%p{class:"mb-4"}
  Split, parse and clean human names into their component parts using GET or POST requests. Input from POST requests are limited to 500 lines. See the
  %a{href:"/developers/code"} Ruby gem
  used in this service.

%dl
  %dt Base URL
  %dd{class:"pl-2"} https://api.bionomia.net/parse

  %dt ?names=
  %dd{class:"pl-2"} human name(s); use multiple lines for POST requests, escaped values for GET requests (required)

  %dt{class:"mt-3"} Example
  %dd{class:"pl-2"}
    %a{href: "https://api.bionomia.net/parse?names=Henry+Robert+Nicollon+des+Abbayes%3BJohn+Errol+Chandos+Aberdeen"}
      https://api.bionomia.net/parse?names=Henry+Robert+Nicollon+des+Abbayes%3BJohn+Errol+Chandos+Aberdeen
  %dt Response
  %dd
    %pre{class:"pre-scrollable bg-dark text-white border rounded p-3", style:"max-height:385px;"}
      %code
        :preserve
          [
            {
              <span class="token property">"original"</span>: <span class="token string">"Henry Robert Nicollon des Abbayes;John Errol Chandos Aberdeen"</span>,
              <span class="token property">"parsed"</span>: [
                {
                  <span class="token property">"given"</span>: <span class="token string">"Henry Robert Nicollon"</span>,
                  <span class="token property">"family"</span>: <span class="token string">"Abbayes"</span>,
                  <span class="token property">"particle"</span>: <span class="token string">"des"</span>
                },
                {
                  <span class="token property">"given"</span>: <span class="token string">"John Errol Chandos"</span>,
                  <span class="token property">"family"</span>: <span class="token string">"Aberdeen"</span>,
                  <span class="token property">"particle"</span>: <span class="token string">null</span>
                }
              ]
            }
          ]
